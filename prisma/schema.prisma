// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

// Define User model
model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  phoneNumber String?
  password    String
  address     Address? // Reference to the Address model
  cart        Cart? // Reference to the Cart model
  orders      Order[] // Reference to the Order model
}

// Define Address model
model Address {
  id      Int    @id @default(autoincrement())
  city    String
  area    String
  zipcode String
  state   String
  user    User   @relation(fields: [userId], references: [id]) // 
  userId  Int    @unique
}

// Define Cart model
model Cart {
  id       Int        @id @default(autoincrement())
  items    Item[]
  user     User       @relation(fields: [userId], references: [id])
  userId   Int        @unique
  CartItem CartItem[]
}

model CartItem {
  id           Int    @id @default(autoincrement())
  quantity     Int
  item         Item   @relation(fields: [itemId], references: [id])
  itemId       Int
  price        Int
  cart         Cart   @relation(fields: [cartId], references: [id])
  cartId       Int
  Order        Order? @relation(fields: [orderOrderId], references: [orderId])
  orderOrderId Int?
}

// Define Item model
model Item {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  mediaObjects MediaObject[]
  price        Float
  stockCount   Int
  sizeOptions  Size[]
  colorOptions String[]
  orders       Order[] // Reference to the Order model
  Cart         Cart?         @relation(fields: [cartId], references: [id])
  cartId       Int?
  CartItem     CartItem[]
  OrderItem    OrderItem[]
}

// Define Size enum
enum Size {
  S
  M
  L
  XL
  XXL
}

// Define MediaObject model
model MediaObject {
  id           Int    @id @default(autoincrement())
  type         String
  url          String
  colorValue   String
  viewOrdering Int
  itemId       Int
  item         Item   @relation(fields: [itemId], references: [id])
}

// Define Order model
model Order {
  orderId    Int         @id @default(autoincrement())
  userId     Int
  orderDate  DateTime    @default(now())
  status     OrderStatus
  orderItems OrderItem[]
  address    String
  amount     Float
  trackingId String?
  user       User        @relation(fields: [userId], references: [id])
  CartItem   CartItem[]

  Item   Item? @relation(fields: [itemId], references: [id])
  itemId Int?
}

// Define OrderItem model
model OrderItem {
  id       Int   @id @default(autoincrement())
  orderId  Int
  itemId   Int
  quantity Int
  price    Float
  order    Order @relation(fields: [orderId], references: [orderId])
  item     Item  @relation(fields: [itemId], references: [id])
}

// Define OrderStatus enum
enum OrderStatus {
  processing
  shipping
  delivered
}
